name: CI/CD Simulation

on:
  push:
    branches:
      - US7871345-feature
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment for deployment'
        required: true
        type: choice
        options:
          - AWS-STAGE
          - HCC-DEV
          - HCC-STAGE
          - HCC-TEST
          - HCC-PROD

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Create pom.xml (Simulated)
        run: |
          echo "Creating pom.xml..."
          touch pom.xml
          echo "pom.xml Created"

      - name: Detect Build Tool
        run: |
          if [ -f "pyproject.toml" ]; then
            echo "BUILD_TOOL=Poetry" >> $GITHUB_ENV
          elif [ -f "pom.xml" ]; then
            echo "BUILD_TOOL=Maven" >> $GITHUB_ENV
          else
            echo "Nenhum build tool identificado. Saindo..."
            exit 1
          fi

      - name: Simulate Maven Setup
        if: ${{ env.BUILD_TOOL == 'Maven' }}
        run: |
          echo "Setting up Maven (Simulated)"
          sleep 3
          echo "Maven Setup Complete"

      - name: Simulate Maven Build
        if: ${{ env.BUILD_TOOL == 'Maven' }}
        run: |
          echo "Running Maven Build (Simulated)"
          sleep 5
          echo "Maven Build Completed"

      - name: Simulate Poetry Setup
        if: ${{ env.BUILD_TOOL == 'Poetry' }}
        run: |
          echo "Setting up Poetry (Simulated)"
          sleep 3
          echo "Poetry Setup Complete"

      - name: Simulate Poetry Build
        if: ${{ env.BUILD_TOOL == 'Poetry' }}
        run: |
          echo "Running Poetry Build (Simulated)"
          sleep 5
          echo "Poetry Build Completed"

      - name: Create Artifact (Simulated)
        run: |
          echo "Simulating build artifact creation..."
          touch artifact.txt
          echo "Build Artifact Ready"

      - name: Upload Artifacts (Simulated)
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: artifact.txt

  CD_AWS_DEV:
    needs: CI
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Artifacts (Simulated)
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Configure AWS Credentials (Simulated)
        run: |
          echo "Configuring AWS Credentials"
          sleep 3
          echo "AWS Credentials Configured"

      - name: Deploy to AWS Dev (Simulated)
        run: |
          echo "Deploying to AWS Dev..."
          sleep 5
          echo "Deployment to AWS Dev Completed"

  CD_AWS_MANUAL:
    needs: CI
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'AWS-STAGE'
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Artifacts (Simulated)
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Configure AWS Credentials (Simulated)
        run: |
          echo "Configuring AWS Credentials for AWS-STAGE"
          sleep 3
          echo "AWS Credentials Configured"

      - name: Deploy to AWS-STAGE Cluster (Simulated)
        run: |
          echo "Deploying to AWS-STAGE Cluster..."
          sleep 5
          echo "Deployment to AWS-STAGE Completed"

  CD_HCC_MANUAL:
    needs: CI
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && startsWith(github.event.inputs.environment, 'HCC-')
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Artifacts (Simulated)
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Configure HCC Credentials (Simulated)
        run: |
          echo "Configuring HCC Credentials for ${{ github.event.inputs.environment }}"
          sleep 3
          echo "HCC Credentials Configured"

      - name: Deploy to ${{ github.event.inputs.environment }} Cluster (Simulated)
        run: |
          echo "Deploying to ${{ github.event.inputs.environment }} Cluster..."
          sleep 5
          echo "Deployment to ${{ github.event.inputs.environment }} Completed"